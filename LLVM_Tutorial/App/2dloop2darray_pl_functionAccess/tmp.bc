; ModuleID = '2dloop2darray_pl_functionAccess.cc'
source_filename = "2dloop2darray_pl_functionAccess.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define dso_local void @_Z2f1PA100_i([100 x i32]* nocapture %A) local_unnamed_addr #0 {
entry:
  %B = alloca [50 x [100 x i32]], align 16
  %0 = bitcast [50 x [100 x i32]]* %B to i8*
  call void @llvm.lifetime.start.p0i8(i64 20000, i8* nonnull %0) #2
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %entry
  %indvars.iv73 = phi i64 [ 0, %entry ], [ %indvars.iv.next74, %for.cond.cleanup3 ]
  br label %for.body4

for.cond.cleanup3:                                ; preds = %for.body4
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond75 = icmp eq i64 %indvars.iv.next74, 100
  br i1 %exitcond75, label %for.cond16.preheader, label %for.cond1.preheader

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv70 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next71, %for.body4 ]
  %arrayidx6 = getelementptr inbounds [50 x [100 x i32]], [50 x [100 x i32]]* %B, i64 0, i64 %indvars.iv70, i64 %indvars.iv73
  %1 = trunc i64 %indvars.iv70 to i32
  store i32 %1, i32* %arrayidx6, align 4, !tbaa !2
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %exitcond72 = icmp eq i64 %indvars.iv.next71, 50
  br i1 %exitcond72, label %for.cond.cleanup3, label %for.body4

for.cond16.preheader:                             ; preds = %for.cond.cleanup3, %for.cond.cleanup18
  %indvars.iv67 = phi i64 [ %indvars.iv.next68, %for.cond.cleanup18 ], [ 1, %for.cond.cleanup3 ]
  br label %for.body19

for.cond.cleanup13:                               ; preds = %for.cond.cleanup18
  call void @llvm.lifetime.end.p0i8(i64 20000, i8* nonnull %0) #2
  ret void

for.cond.cleanup18:                               ; preds = %for.body19
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %exitcond69 = icmp eq i64 %indvars.iv.next68, 100
  br i1 %exitcond69, label %for.cond.cleanup13, label %for.cond16.preheader

for.body19:                                       ; preds = %for.body19, %for.cond16.preheader
  %indvars.iv = phi i64 [ 1, %for.cond16.preheader ], [ %indvars.iv.next, %for.body19 ]
  %rem76 = and i64 %indvars.iv, 1
  %tobool = icmp eq i64 %rem76, 0
  %2 = add nsw i64 %indvars.iv, -1
  %arrayidx23 = getelementptr inbounds [100 x i32], [100 x i32]* %A, i64 %2, i64 %indvars.iv67
  %arrayidx27 = getelementptr inbounds [50 x [100 x i32]], [50 x [100 x i32]]* %B, i64 0, i64 %indvars.iv, i64 %indvars.iv67
  %cond.in = select i1 %tobool, i32* %arrayidx27, i32* %arrayidx23
  %cond = load i32, i32* %cond.in, align 4, !tbaa !2
  %arrayidx31 = getelementptr inbounds [100 x i32], [100 x i32]* %A, i64 %indvars.iv, i64 %indvars.iv67
  store i32 %cond, i32* %arrayidx31, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 50
  br i1 %exitcond, label %for.cond.cleanup18, label %for.body19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define dso_local void @_Z2f2PA100_i([100 x i32]* nocapture %A) local_unnamed_addr #0 {
entry:
  %B = alloca [50 x [100 x i32]], align 16
  %0 = bitcast [50 x [100 x i32]]* %B to i8*
  call void @llvm.lifetime.start.p0i8(i64 20000, i8* nonnull %0) #2
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %entry
  %indvars.iv73 = phi i64 [ 0, %entry ], [ %indvars.iv.next74, %for.cond.cleanup3 ]
  br label %for.body4

for.cond.cleanup3:                                ; preds = %for.body4
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond75 = icmp eq i64 %indvars.iv.next74, 100
  br i1 %exitcond75, label %for.cond16.preheader, label %for.cond1.preheader

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv70 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next71, %for.body4 ]
  %arrayidx6 = getelementptr inbounds [50 x [100 x i32]], [50 x [100 x i32]]* %B, i64 0, i64 %indvars.iv70, i64 %indvars.iv73
  %1 = trunc i64 %indvars.iv70 to i32
  store i32 %1, i32* %arrayidx6, align 4, !tbaa !2
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %exitcond72 = icmp eq i64 %indvars.iv.next71, 50
  br i1 %exitcond72, label %for.cond.cleanup3, label %for.body4

for.cond16.preheader:                             ; preds = %for.cond.cleanup3, %for.cond.cleanup18
  %indvars.iv67 = phi i64 [ %indvars.iv.next68, %for.cond.cleanup18 ], [ 1, %for.cond.cleanup3 ]
  br label %for.body19

for.cond.cleanup13:                               ; preds = %for.cond.cleanup18
  call void @llvm.lifetime.end.p0i8(i64 20000, i8* nonnull %0) #2
  ret void

for.cond.cleanup18:                               ; preds = %for.body19
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %exitcond69 = icmp eq i64 %indvars.iv.next68, 100
  br i1 %exitcond69, label %for.cond.cleanup13, label %for.cond16.preheader

for.body19:                                       ; preds = %for.body19, %for.cond16.preheader
  %indvars.iv = phi i64 [ 1, %for.cond16.preheader ], [ %indvars.iv.next, %for.body19 ]
  %rem76 = and i64 %indvars.iv, 1
  %tobool = icmp eq i64 %rem76, 0
  %2 = add nsw i64 %indvars.iv, -1
  %arrayidx23 = getelementptr inbounds [100 x i32], [100 x i32]* %A, i64 %2, i64 %indvars.iv67
  %arrayidx27 = getelementptr inbounds [50 x [100 x i32]], [50 x [100 x i32]]* %B, i64 0, i64 %indvars.iv, i64 %indvars.iv67
  %cond.in = select i1 %tobool, i32* %arrayidx27, i32* %arrayidx23
  %cond = load i32, i32* %cond.in, align 4, !tbaa !2
  %arrayidx31 = getelementptr inbounds [100 x i32], [100 x i32]* %A, i64 %indvars.iv, i64 %indvars.iv67
  store i32 %cond, i32* %arrayidx31, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 50
  br i1 %exitcond, label %for.cond.cleanup18, label %for.body19
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0 (a7c2c8ff4eb589c59ad9ff6e80fa50edf5b97a46)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
