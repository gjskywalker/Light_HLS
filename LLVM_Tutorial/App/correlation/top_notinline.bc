; ModuleID = 'correlation.cpp'
source_filename = "correlation.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

$_ZSt4sqrtf = comdat any

; Function Attrs: nounwind uwtable
define dso_local void @_Z18kernel_correlationiifPA28_fS0_PfS1_(i32 %m, i32 %n, float %float_n, [28 x float]* nocapture %data, [28 x float]* nocapture readnone %corr, float* nocapture %mean, float* nocapture %stddev) local_unnamed_addr #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv164 = phi i64 [ 0, %entry ], [ %indvars.iv.next165, %for.end ]
  %arrayidx = getelementptr inbounds float, float* %mean, i64 %indvars.iv164
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !2
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.body
  %indvars.iv161 = phi i64 [ 0, %for.body ], [ %indvars.iv.next162, %for.body3 ]
  %arrayidx7 = getelementptr inbounds [28 x float], [28 x float]* %data, i64 %indvars.iv161, i64 %indvars.iv164
  %0 = load float, float* %arrayidx7, align 4, !tbaa !2
  %1 = load float, float* %arrayidx, align 4, !tbaa !2
  %add = fadd float %0, %1
  store float %add, float* %arrayidx, align 4, !tbaa !2
  %indvars.iv.next162 = add nuw nsw i64 %indvars.iv161, 1
  %exitcond163 = icmp eq i64 %indvars.iv.next162, 32
  br i1 %exitcond163, label %for.end, label %for.body3

for.end:                                          ; preds = %for.body3
  %2 = load float, float* %arrayidx, align 4, !tbaa !2
  %div = fdiv float %2, %float_n
  store float %div, float* %arrayidx, align 4, !tbaa !2
  %indvars.iv.next165 = add nuw nsw i64 %indvars.iv164, 1
  %exitcond166 = icmp eq i64 %indvars.iv.next165, 28
  br i1 %exitcond166, label %for.body17, label %for.body

for.body17:                                       ; preds = %for.end, %for.end41
  %indvars.iv158 = phi i64 [ %indvars.iv.next159, %for.end41 ], [ 0, %for.end ]
  %arrayidx19 = getelementptr inbounds float, float* %stddev, i64 %indvars.iv158
  store float 0.000000e+00, float* %arrayidx19, align 4, !tbaa !2
  %arrayidx28 = getelementptr inbounds float, float* %mean, i64 %indvars.iv158
  br label %for.body22

for.body22:                                       ; preds = %for.body22, %for.body17
  %indvars.iv155 = phi i64 [ 0, %for.body17 ], [ %indvars.iv.next156, %for.body22 ]
  %arrayidx26 = getelementptr inbounds [28 x float], [28 x float]* %data, i64 %indvars.iv155, i64 %indvars.iv158
  %3 = load float, float* %arrayidx26, align 4, !tbaa !2
  %4 = load float, float* %arrayidx28, align 4, !tbaa !2
  %sub = fsub float %3, %4
  %mul = fmul float %sub, %sub
  %5 = load float, float* %arrayidx19, align 4, !tbaa !2
  %add38 = fadd float %5, %mul
  store float %add38, float* %arrayidx19, align 4, !tbaa !2
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %exitcond157 = icmp eq i64 %indvars.iv.next156, 32
  br i1 %exitcond157, label %for.end41, label %for.body22

for.end41:                                        ; preds = %for.body22
  %6 = load float, float* %arrayidx19, align 4, !tbaa !2
  %div44 = fdiv float %6, %float_n
  store float %div44, float* %arrayidx19, align 4, !tbaa !2
  %call = tail call float @_ZSt4sqrtf(float %div44)
  %cmp51 = fcmp ugt float %call, 0x3FB99999A0000000
  %conv54 = select i1 %cmp51, float %call, float 1.000000e+00
  store float %conv54, float* %arrayidx19, align 4, !tbaa !2
  %indvars.iv.next159 = add nuw nsw i64 %indvars.iv158, 1
  %exitcond160 = icmp eq i64 %indvars.iv.next159, 28
  br i1 %exitcond160, label %for.cond63.preheader, label %for.body17

for.cond63.preheader:                             ; preds = %for.end41, %for.inc85
  %indvars.iv152 = phi i64 [ %indvars.iv.next153, %for.inc85 ], [ 0, %for.end41 ]
  br label %for.body65

for.body65:                                       ; preds = %for.body65, %for.cond63.preheader
  %indvars.iv = phi i64 [ 0, %for.cond63.preheader ], [ %indvars.iv.next, %for.body65 ]
  %arrayidx67 = getelementptr inbounds float, float* %mean, i64 %indvars.iv
  %7 = load float, float* %arrayidx67, align 4, !tbaa !2
  %arrayidx71 = getelementptr inbounds [28 x float], [28 x float]* %data, i64 %indvars.iv152, i64 %indvars.iv
  %8 = load float, float* %arrayidx71, align 4, !tbaa !2
  %sub72 = fsub float %8, %7
  store float %sub72, float* %arrayidx71, align 4, !tbaa !2
  %call73 = tail call float @_ZSt4sqrtf(float %float_n)
  %arrayidx75 = getelementptr inbounds float, float* %stddev, i64 %indvars.iv
  %9 = load float, float* %arrayidx75, align 4, !tbaa !2
  %mul76 = fmul float %call73, %9
  %10 = load float, float* %arrayidx71, align 4, !tbaa !2
  %div81 = fdiv float %10, %mul76
  store float %div81, float* %arrayidx71, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 28
  br i1 %exitcond, label %for.inc85, label %for.body65

for.inc85:                                        ; preds = %for.body65
  %indvars.iv.next153 = add nuw nsw i64 %indvars.iv152, 1
  %exitcond154 = icmp eq i64 %indvars.iv.next153, 32
  br i1 %exitcond154, label %for.end87, label %for.cond63.preheader

for.end87:                                        ; preds = %for.inc85
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local float @_ZSt4sqrtf(float %__x) local_unnamed_addr #1 comdat {
entry:
  %call = tail call float @sqrtf(float %__x) #3
  ret float %call
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) local_unnamed_addr #2

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0 (a7c2c8ff4eb589c59ad9ff6e80fa50edf5b97a46)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"float", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
